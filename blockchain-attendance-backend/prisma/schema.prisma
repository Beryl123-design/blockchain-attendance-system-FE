generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  password        String
  role            String
  ethereumAddress String         @unique
  attendance      Attendance[]
  leaveRequests   LeaveRequest[]
  payroll         Payroll[]
}

model Attendance {
  id              Int       @id @default(autoincrement())
  date            DateTime  @default(now())
  checkInTime     DateTime  @default(now()) // renamed from checkIn
  checkOutTime    DateTime? // renamed from checkOut
  status          String    // "PRESENT", "ABSENT", "LATE", "LEAVE"
  totalWorkTime   Int?      // in minutes
  totalBreakTime  Int?      // in minutes
  overtime        Int?      // in minutes
  location        String?
  blockchainHash  String?   // Store transaction hash
  userId          Int
  user            User      @relation(fields: [userId], references: [id])
  verified        Boolean   @default(false)
  
  @@index([userId, date])
}

model LeaveRequest {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  leaveType String
  reason    String
  status    String   // "PENDING", "APPROVED", "REJECTED"
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Payroll {
  id          Int      @id @default(autoincrement())
  amount      Float
  date        DateTime
  userId      Int
  status      String   // "PENDING", "PROCESSED", "FAILED"
  processed   Boolean  @default(false)
  txHash      String?  // blockchain transaction hash
  user        User     @relation(fields: [userId], references: [id])
}
